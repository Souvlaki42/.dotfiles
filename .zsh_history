poetry --version
md .zfunc/_poetry
rmdir ~/.zfunc/
rm -rf ~/.zfunc/
md .zfunc
poetry completions zsh > ~/.zfunc/_poetry
cd projects
poetry new SouvlakiBrowser
la SouvlakiBrowser
rm -rf SouvlakiBrowser
poetry new souvlaki-browser
cd souvlaki-browser
poetry shell
emulate bash -c '. /home/ilias/.cache/pypoetry/virtualenvs/souvlaki-browser-1W85e9fw-py3.10/bin/activate'
poetry add pyqt6 pyqt6-webengine
md nvim
mv nvim .config
cd .config/nvim
nix-env -iA nixpkgs.ripgrep
cl && vim .
cd projects/my-website
mv projects personal
fzf
cd | fzf
la | fzf | cd
cd ~/personal/my-website
alias gap
alias
alias | grep patch
gc -m "Updating Astro and fixed footer responsiveness issues and homepage link issues"
gcl https://git.codecrafters.io/7cc54cc135d1cd1d codecrafters-grep-go
cd cod
vi
alias vi
alias vim
echo -n "sally has q apple" | grep -E "\d apples"
echo -n "sally has 1 apple" | grep -E "\d apples"
echo -n "sally has 3 apples" | grep -E "\d apple"
echo "sally has 3 apples" | grep -E "\d apple"
rm -rf codecrafters-grep-go
git clone https://git.codecrafters.io/66be6b018df3bcad codecrafters-grep-go
cd codecrafters-grep-go
cd personal/codecrafters-grep-go
cd codecrafters-
vim cmd/mygrep/main.go
echo -n "apple123" | ./your_program.sh -E "\d"
echo -n "log" | ./your_program.sh -E "^log"
echo -n "slog" | ./your_program.sh -E "^log"
echo -n "dog" | ./your_program.sh -E "dog$"
echo -n "dogs" | ./your_program.sh -E "dog$"
echo $?
echo -n "apple" | ./your_program.sh -E "a+"
md nextjs-portfolio-tutorial
cd nextjs-portfolio-tutorial
bun create next-app@latest .
bunx shadcn-ui@latest add button
sudo apt install erlang-dev elixir
sudo apt uninstall erlang-dev elixir
sudo apt remove erlang-dev elixir
sudo add-apt-repository ppa:rabbitmq/rabbitmq-erlang
sudo apt install elixir erlang-dev erlang-xmerl
nslookup secretmessage.networkchuck.com
nslookup networkchuck.com
sudo apt remove elixir erlang-dev erlang-xmerl
nix-env -iA nixpkgs.elixir
elixir --version
mix new elixir-tutorial
mix new elixir_tutorial
cd elixir_tutorial
iex -s mix
iex -S mix
mix run -e "ElixirExample"
mix run -e "ElixirExample.hello"
mix run -e "ElixirTutorial"
mix run -e "ElixirTutorial.hello"
mix local.hex
alias mix
alias mix run
cl && mix
mix deps.clean
mix deps.clean --unused
mix deps.clean --all
mix run
mix deps.get
iex
mix help
sudo apt install inotify-tools libtool automake libgmp-dev make libwxgtk-webview3.0-gtk3-dev libssl-dev libncurses5-dev curl git\
\

mix
elixir -v
tudio
cargo install tuido
which code
where code
alias which
alias where
which where
where which
where where
info zsh where
info zsh which
where cargo
where rustup
claer
gcl https://gitlab.com/Oglo12/tuido.git
cd tuido
tuido
nix-env -iA nixpkgs.hellix
nix-env -iA nixpkgs.helix
hx
hx personal
cd personal/elixir_tutorial
printf "\x1b[${bg};2;${red};${green};${blue}m\n"
printf "\x1b[38;2;255;100;0mTRUECOLOR\x1b[0m\n"
hx .
hx ~/.zshrc
cd ~
cd personal/diagoras-ikarias
ls -a
\ls -a
cd personal/my-website
cd diagoras-ikarias
cloc src
cd ../souvlaki-browser
cd ../TagStudio
grv
git pull
direnv allow
cd tagstudio
cd resources
cd ../../
cloc tagstudio/src
bun add @tauri-apps/cli@next
bun run tauri migrate
cd .cargo
nix-env -e rustup
rustup
cargo
rm -rf .cargo
sudo apt install lynx
lynx
md go-api
go mod init github.com/souvlaki42/go-api
nix-env -u nixpkgs.go
md safe-await
cd safe-await
nix-env -iA nixpkgs.delta
vim ~/.gitconfig
sudo apt install flatpak
flatpak install flathub org.gnome.World.PikaBackup
sudo apt remove flatpak
nix-env -iA nixpkgs.flatpak
flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
curl -f https://zed.dev/install.sh | sh
nix-env -iA nixpkgs.zig
md zig-test
cd zig-test
zig ini
zig build run
zig build test
cd /mnt/c/Users/Ilias/Documents/Obsidian/
\vim
vim Hacking.md
code souvlaki-browser
poetry run
poetry run souvlaki_browser/main.py
poetry install
poetry run dev
la projects
la personal
mv element.al personal
bun create astro@latest .
bun create astro@latest
mv .prettierrc element.al
mv .git element.al
mv .github element.al
mv element.al ../el
rmdir element.al
mv el element.al
code nextjs-pokedex
rm -rf job-board
cd job-board
npx shadcn@latest add "https://v0.dev/chat/b/fhfqaPC?token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..lBSrZI0BcWBnongL.Skp5uQndA1Ti04f70Yn126g5nLZ7vmTL65kkHWqF8kelkFZWINg.l-ISCkqQq34KQnF95gjsXA"
bunx --bun shadcn@latest add "https://v0.dev/chat/b/fhfqaPC?token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..lBSrZI0BcWBnongL.Skp5uQndA1Ti04f70Yn126g5nLZ7vmTL65kkHWqF8kelkFZWINg.l-ISCkqQq34KQnF95gjsXA"
bunx --bun shadcn@latest add "https://v0.dev/chat/b/NJXh0HQ?token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..yld3nFi0p8iSrCzx.MfVvmNIkPSaRFWwvgqrQvNFNxi8qJ2oIaVvu2skYIC29B_ORf8M.s1H_6NrnycWkxv6Ewsb0zw"
bun add next-themes
docker
docker-compose
md single-php-file
cd single-php-file
vim index.php
npx tailwindcss init
bunx tailwindcss -i ./styles2.css -o ./styles.css --minify
docker-compose up -d --no-cache
docker-compose up -d -b
docker-compose up -d --pull
export UID=$(id -u)
export GID=$(id -g)
docker-compose build --no-cache
cd personal/single-php-file
docker volume ps
docker volume ls
docker logs database
docker exec -it database mysql -u coffee -psecret -D coffeedb
docker volume rm  single-php-file_mysql_data
docker logs mysql
docker exec -it mysql mysql -u coffee -psecret -D coffeedb
docker ps
bunx tailwindcss -i ./input.css -o ./src/styles.css --watch\

bun add tailwindcss postcss autoprefixer
npx tailwindcss -i ./src/tailwind.css -o ./src/styles.css --watch\

bunx tailwindcss -i ./src/tailwind.css -o ./src/styles.css --watch\

curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64
tailwindcss init -p\

chmod +x tailwindcss
sudo chmod +x tailwindcss
chown ilias tailwindcss
./tailwindcss init -p
sudo ./tailwindcss init -p
curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/download/latest/tailwindcss-linux-x64
chmod +x tailwindcss-linux-x64
mv tailwindcss-linux-x64 tailwindcss
./tailwindcss init
ls -l tailwindcss
bunx tailwindcss init
bunx tailwindcss -i ./tailwind.css -o ./src/styles.css --watch\

mv single-php-file single-php-file2
md single-php-app
cd single-php-app
cd single-php-file2
ls
cd ~/.config/ohmyposh
vim zen.toml
nix-env -iA nixpkgs.speedtest-cli
speedtest-cli
md tmux
vim ../tmux/tmux.conf
sudo apt-get install bash bc coreutils gawk git jq playerctl
nix-env -iA nixpkgs.zkbd
zkbd
nix-env -iA nixpkgs.zdb-utils
nix-env -iA nixpkgs.zbd-utils
autoload zkbd ; zkbd
tput khome | cat -v; echo
tput khome | cat -- -v; echo
vim tmux.conf
apt list
sudo apt remove docker.io docker-compose
sudo apt autoremove
apt list --installed | grep docker
alias nix
nix
nix --help
where docker
where docker-compose
md wordpress-docker.test
wget https://wordpress.org/latest.zip
mv latest.zip wordpress-6.6.2.zip
docker-compose up
docker-compose up -d
wget https://wordpress.org/wordpress-5.7.zip
unzip wordpress-5.7.zip
rm wordpress-5.7.zip
rm wordpress
mv /mnt/c/Users/Ilias/certs nginx
docker-compose run --rm wp user list
gcl https://github.com/Souvlaki42/wordpress-docker.test.git
mv wordpress-docker.test/.git .
cd wordpress
alias grm
alias grmc
grmc wordpress
grmc -r wordpress
grmc -r nginx/certs/
docker --version
docker-compose --version
gc -m "First actually working version"
gc -m "Updated usage instructions in README.md"
docker-compose run --rm php -m
docker-compose run --rm php -i
docker-compose run --rm php -i | grep imagick
docker-compose run --rm php -i | grep zip
gc -m "Updated php version to 8.3, installed more php extensions and fixed a bug in README.md"
sudo chown -R 777 wordpress
sudo chown -R www-data:www-data ./wordpress\

sudo chmod -R 755 ./wordpress\

chown -R 777 wordpress
whoami
sudo rm -rf wordpress
unzip wordpress-6.6.2.zip
rm wordpress-6.6.2.zip
ls -l
docker-compose up -d --build
rm -rf wordpress
sudo rm -rf mysql
wget https://wordpress.org/wordpress-6.6.2.zip
mv wordpress-6.6.2.zip wordpress.zip
unzip wordpress.zip
docker-compose ps
cp wordpress/wp-config-sample.php wordpress/wp-config.php
docker-compose run --rm php -m | grep zip
docker-compose run --rm php -m | grep curl
docker-compose up -d --build site
gc -m "Permissions fixed and other low importance fixes"
docker-compose down
nix-env -u
sudo apt install -y virt-manager
sudo usermod --append --groups kvm,libvirt "${USER}"
sudo chown root:kvm /dev/kvm
sudo chmod 660 /dev/kvm
sudo libvirtd &
sudo virtlogd &
mv job-board job-hub
bun remove @radix-ui/react-dropdown-menu
bunx --bun shadcn@latest add dropdown-menu
sudo apt remove -y virt-manager
md ssh-docker
cd ssh-docker
vim docker-compose.yml
node
apt install curl git
sudo apt install curl git
pip3 install -U cuckoo
pip install -U cuckoo
md cuckoo
cd cuckoo
rm -rf cuckoo
sudo apt install nasm qemu-system-x86 -y
md x86-bootloader
cd x86-bootloader
la -alh
tree
nix-env -iA nixpkgs.bless
bless bin/boot.bin
qemu-system-x86_64 -hda bin/boot.bin
make run
sudo apt install build-essential bison flex libgmp3-dev libmpc-dev libmpfr-dev texinfo libisl-dev -y
nix-env -iA nixpkgs.gcc
nix-env -e gcc
nix-env -e gcc-wrapper
nix-env -iA nixpkgs-unstable.gccgo14
nix-env -iA nixpkgs.gccgo14
nix-env -e nixpkgs.gccgo14
nix-env -e gccgo14
nix-env -e nixpkgs.gcc14
nix-env -iA nixpkgs.gcc14
nix-env -iA nixpkgs.gcc14\

sudo apt remove gcc
\gcc --version
nix-env -e gccgo-wrapper-14.1.0
nix-env -e gcc-wrapper-14.1.0
nix-env -iA nixpkgs.gcc-wrapper-14.2.0
nix-env -iA nixpkgs.gcc-wrapper
nix-channel --list
nix-channel --help\

mv /mnt/c/Users/Ilias/Downloads/gcc-14.2.0.tar.gz ~
mv /mnt/c/Users/Ilias/Downloads/binutils-2.43.tar.xz ~
rm ~/binutils-2.43.tar.xz
mv /mnt/c/Users/Ilias/Downloads/binutils-2.43.tar.gz ~
unzip binutils-2.43.tar.gz
md binutils
md gcc
tar -xf binutils-2.43.tar.gz -C ~/binutils
tar -xf gcc-14.2.0.tar.gz -C ~/gcc
tree ~/gcc
tree ~/binutils
tree ~/gcc --depth 1
cd ~/gcc
md src
mv gcc/gcc-14.2.0 src
mv binutils/binutils-2.43 src
rmdir binutils
rmdir gcc
export PREFIX="$HOME/opt/cross"\
export TARGET=i686-elf\
export PATH="$PREFIX/bin:$PATH"
md build-binutils
cd build-binutils
../binutils-2.43/configure --target=$TARGET --prefix="$PREFIX" --with-sysroot --disable-nls --disable-werror\

make
rm -rf build-binutils
where bun
bun upgrade
bun --version
rustup self uninstall
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
la .cargo
sudo apt install lld
sudo apt update\
sudo apt install libwebkit2gtk-4.1-dev \\
  build-essential \\
  curl \\
  wget \\
  file \\
  libxdo-dev \\
  libssl-dev \\
  libayatana-appindicator3-dev \\
  librsvg2-dev
cd personal/file-manager
bunx --bun shadcn@latest init\

bun add -D tailwindcss postcss autoprefixer\
\
npx tailwindcss init -p\

rm -rf recipes-app
cd recipes
bunx --bun shadcn@latest init -d
cd personal/recipes
rm -rf recipes
cargo new file-manager
mv ~/.cargo/config ~/.cargo/config.toml
rm -rf file-manager
bun create tauri-app --rc
vim ~/.cargo/config
rustup toolchain list
vim ~/.cargo/config.toml
bun tauri dev
cd src-tauri
md sysinfo-test
cargo new
rmdir personal/sysinfo-test
cargo new sysinfo-test
vim sysinfo-test/
cd sysinfo-test
vim ~/.config/nvim/lua/options.lua
neofetch
rustup update
rustup target add x86_64-pc-windows-gnu
sudo apt install mingw-w64
sudo cargo run
la ..
mv sysinfo-test personal
tmu
vim src/main.rs
cargo install create-tauri-app
cd rust-file-manager
cargo tauri dev
cargo create-tauri-app --rc
cargo install tauri-cli --version '^2.0.0-rc'
rm -rf rust-file-manager
pgrep
cd .local/bin
vim t.sh
chmod +x t.sh
t.sh
cd pr
mv SouvlakiBrowser ~/personal/souvlaki-browser-2
la ~/personal
la ~/personal/souvlaki-browser-2
la ~/personal/souvlaki-browser-2/src
rmdir projects
rm binutils-2.43.tar.gz
rm gcc-14.2.0.tar.gz
rm -rf src
cd tools
mv ~/.local/bin/t.sh .
mv * ~/.local/bin
rmdir tools
mv t.sh t
tmux-kill
cd bin
vim t
du ~/.zshrc
\ls -la ~
find / -type f .zshrc
find / -type f -iname .zshrc
find $HOME -type f -iname .zshrc
cd personal/sysinfo-test
cargo build --target x86_64-pc-windows-gnu --release
cp target/x86_64-pc-windows-gnu/release/sysinfo-test.exe /mnt/c/Users/Ilias/Desktop
gc -m "First before cache"
git remote add origin https://github.com/Souvlaki42/sysinfo-tests.git
md python-
mv python- python-big-text
cd python-big-text
t
cd ~/.local/bin
rm t
rm $HOME/.local/bin/zed
rm ~/.local/share/applications/dev.zed.Zed.desktop
rm -rf ~/.local/zed.app
curl https://zed.dev/install.sh | sh -s uninstall
curl https://raw.githubusercontent.com/zed-industries/zed/82ad7f2b/script/install.sh | sh -s uninstall
zed
nix-env -iA nixpkgs.deno
nix-env -e deno
sudo passwd
su
sudo apt install 7z
sudo apt-get install p7zip-full
uname -sm
chmod +x deno.sh
./deno.sh
vim deno.sh
./deno.sh | sh
rm deno.sh
curl -fsSL https://deno.land/install.sh | zsh
curl -fsSL https://deno.land/x/install/install.sh | sh
rm -rf ~/.deno
curl -fsSL https://deno.land/install.sh
curl -fsSL https://deno.land/install.sh | sh
deno upgrade rc
deno --version
cd todo-fresh
deno run start
rm -rf * .gitignore .vscode
deno run -Ar https://fresh.deno.dev
deno task start
where npm
npm i yarn
sudo apt update\
sudo apt install libwebkit2gtk-4.0-dev \\
    build-essential \\
    curl \\
    wget \\
    file \\
    libssl-dev \\
    libgtk-3-dev \\
    libayatana-appindicator3-dev \\
    librsvg2-dev
npm i -g yarn
yarn.exe
nix-env -iA nixpkgs.yarn
yarn
npm list -g
cargo install tauri-cli\

cargo tauri build\

docker system prune -a
md tauri-docker
find -type d ~/personal | fzf | cd[A
find -type d ~/personal | fzf | cd
cd tauri-docker
vim Dockerfile
docker build
docker buildx .
docker buildx build .
cd tau
vim ~/.zsh_history
cd conaticus-file-explorer
md particle-swarm-python
cd particle-swarm-python
mv particle-swarm-python particle-swarm
code particle-swarm
cp main.py /mnt/c/Users/Ilias/Desktop
pip freeze | xargs pip uninstall -y\

pip uninstall -y -r <(pip freeze)\

pip3 list
pip3 freeze | xargs pip uninstall -y\

cd particle-swarm
pip3 install matplotlib
pip3 install numpy
pip3 install PyQt6
cp /mnt/c/Users/Ilias/Downloads/Particle\ Swarm\ Python\ Scripts.zip .
unzip Particle\ Swarm\ Python\ Scripts.zip
python3 particle_swarm.py
python3 ai.py
md go-secure-auth
cd go-secure-auth
go mod init github.com/souvlaki42/go-secure-auth
which go
nix-env -u go
go version
md ai-calculator
mv ai-calculator smart-board
cd frontend
bun run dev
bun add -D tailwindcss postcss autoprefixer\
npx tailwindcss init -p
bun add -D tailwindcss postcss autoprefixer\
bunx tailwindcss init -p
gcl https://git.codecrafters.io/14e84c00732ab760 codecrafters-kafka-rust
cd kafka
gc --allow-empty -m "test"
gc -am uncommenting
gp origin master
./your_program.sh
sudo apt install curl python3-pip python3-venv
curl --version
gcl https://github.com/Souvlaki42/souvlaki-chat.git
code souvlaki-chat
bun pm untrusted
bun pm trust
bun pm trust --all
md c-tests
vim main.c
cd calendly-clone
bunx --bun shadcn@latest init
md tanstack-start
cd tanstack-start
rm .gitignore
rm package.json
bun add @tanstack/start @tanstack/react-router vinxi react react-dom @vitejs/plugin-react
bun add -D typescript @types/react @types/react-dom
npm init -y
npm i @tanstack/start @tanstack/react-router vinxi
npm i react react-dom @vitejs/plugin-react
npm i -D typescript @types/react @types/react-dom
npm run dev
sudo apt update -y
sudo apt upgrade -y
sudo apt-get install build-essential
./a.out hello
gcc main.c
./a.out -t 34
rm main
gcc calc.c
rm a.out
go run ./go-calc/main.go
gcc -o main main.c
gcc -o main main.cpp
make all
rm main && cl && g++ main.cpp -o main && ./main
sudo apt install build-essential git
sudo apt install libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev libwayland-dev libxkbcommon-dev
gcl https://github.com/raylib-extras/raylib-quickstart.git
mv raylib-quickstart todo-app
cd todo-app
g++ main.cpp -o main
./main
git remote add origin https://github.com/Souvlaki42/c-tests.git
gb -M main
gpu origin main
alias gpu
gp -u origin main
ga -A
gc -m "Calc v1"
gp
g++ calc.cpp -o calc
./calc
cd per
rm -rf todo-app
md people-list
cd people-list
pip3 install fasthtml
pip3 install python-fasthtml
vim ~/.config/nvim/
vim main.py
pip3 install fastlite
go mod init github.com/souvlaki42/people-list
go get github.com/gofiber/fiber/v2\
go get github.com/gofiber/fiber/v2/middleware/logger\
go get gorm.io/driver/sqlite\
go get gorm.io/gorm\

go run ./main.go
go get github.com/gofiber/template
go get github.com/gofiber/template/html/v2
python3 main.py
zig --version
zig version
zls
cd p
md zig-game
cd zig-game
rm -rf * .zig-cache
zig init-exe
zig init
zig build --help
zig build-exe
zig build-exe --help
zig build-exe src/main.zig
zig fetch --save https://github.com/Not-Nik/raylib-zig/archive/devel.tar.gz\

md raylib-rs
cd raylib-rs
cargo init
cargo run
code codecrafters-kafka-rust
codecrafters submit
codecrafters test
g reset HEAD~1
gst
md test
rmdir test
rm -rf test
rm -rf node_modules
rm -rf element.al
gcl https://github.com/Souvlaki42/element.al.git
oh-my-posh upgrade
oh-my-posh upgrade --help
oh-my-posh upgrade -f
md old
mv * old
mv .prettierrc .gitignore .git .github old
bun add -D tailwindcss postcss autoprefixer
bunx tailwindcss init -p
la src
la src/api
vim src/api/getPosts.ts
md old2
mv .prettierrc .gitignore * old2
mv src/app.tsx old2/src
rmdir src
mv .vite old
mv old .vite
mv .vite old2
mv old2/old .
bun create qwik@latest .
la ../temp
mv old2 ../temp
mv ../temp/old .
mv ../temp/old2 ./old
mv old ../temp
bun create qwik@latest
sudo apt install gnupg2 apt-transport-https
sudo add-apt-repository ppa:wslutilities/wslu
sudo apt install wslu
wslview
rm -rf one-test
bunx one
cd one-test
sudo du -shc /var/*
sudo du -shc ~/*
sudo vim /etc/wsl.conf
systemctl list-unit-files --type=service
bun remove unlighthouse
npm create astro@latest -- --ref next
cd astro-5-test/
bunx @astrojs/upgrade beta
bun astro sync
bun astro info
;a
cd tasks
cp -R tasks zerohide
code zerohide
go  run .
go build
GOOS=windows GOARCH=amd64 go build
mv zerohide.exe /mnt/c/Users/Ilias/Desktop
bun run qwik add tailwind
rm -rf .eslintignore .eslintrc.cjs .gitignore .prettierignore .prettierrc.js .vscode
rm -rf *
rm -rf .vite
bun create astro@latest -- --ref next
bunx astro add tailwind
cd te
cd old2
cd src
cp elements.ts ~/personal/element.al
bun add -D prettier prettier-plugin-tailwindcss
la public
cp public/souvlaki42.png ~/personal/element.al/public
cp public/delta911ee.png ~/personal/element.al/public
bunx sync
bunx astro sync
rm -rf * .gitignore
bun init
bun add fuse.js
cd my-website
cd test
bun run index.ts
cd ../..
cd temp
cd old
nix-env -iA nixpkgs.aseprite
nix-env -iA nixpkgs.jupyterlab
pip3 install jupyterlab
pwd
python3 untitled.py
rm -rf .ipython .ipynb_checkpoints .jupyter
pip3 install catppuccin-jupyterlab
md jupyterlab
cd jupyterlab
jupyter lab
aseprite
la ~
rm ~/untitled.py
la ~/Downloads
cd ~/Downloads
mv archive.zip ~/personal/jupyterlab
cd ~/personal/jupyterlab
unzip archive.zip
rm sample_submission_pzljTaX.csv test_nfaJ3J5.csv
rm archive.zip
mv train_0irEZ2H.csv train.csv
pip3 install numpy pandas matplotlib scikit-learn
bun create vite@latest
cd movie-hero-section
bun install
bun add remixicon
cd c-tests
md university
vim first.c
gc ../
gcc first.c -o first
./first
code better-auth-test
bun add better-sqlite3
bun add -D @types/better-sqlite3
bunx better-auth migrate
bunx better-auth generate
npx better-auth migrate
bunx @better-auth/cli migrate
md bigcat-tutorial
cd bigcat-tutorial
pip3 install flask
ifconfig
ip addr | grep eth0
python3 app.py
rm deno.json
rm main.ts
rm main_test.ts
md discord-bot
cd discord-bot
code .
rm *
deno init
deno add npm:@discordeno/bot
deno add -D npm:@discordeno/types
deno upgrade
deno run -A main.ts
deno task dev
sudo apt install tasksel
sudo apt install xrdp
sudo tasksel
sudo dpkg --configure -a
sudo apt install libx11-dev
sudo apt install libx11-doc
rm -rf .create-qwik-23uj25paf7r
md x11-c
mv c-tests/university .
la c-tests
vim c-tests/calc.cpp
mv c-tests/calc.cpp university
g
g init
git remote add origin https://github.com/Souvlaki42/university.git
gl
git branch --set-upstream-to=origin/main main
rm -rf .git
rm first
mv first.c first-assignment.c
gcl https://github.com/Souvlaki42/university.git
mv university/* .
la university
mv university/.git .
mv university/.gitignore .
mv university/.vscode .
cat calc.cpp
rmdir university
rmdir ../c-tests
la ../c-tests
rm -rf ../c-tests
gcc x11-gui.c -lX11
vim wezterm.lua
rm tokyo_night.lua
wget https://raw.githubusercontent.com/folke/tokyonight.nvim/refs/heads/main/extras/wezterm/tokyonight_storm.toml
rm tokyonight_storm.toml
wget https://raw.githubusercontent.com/folke/tokyonight.nvim/refs/heads/main/extras/wezterm/tokyonight_night.toml
vim .
nix-env -i
nix-env --list-generations
sudo add-apt-repository ppa:neovim-ppa/unstable
nix-env -u neovim
nix-env -e neovim
sudo apt install neovim
vim ~/.zshrc
vim
cd ../../.glzr/glazewm/
cd ../
cd zebar
wget https://raw.githubusercontent.com/m1chaelwilliams/make-windows-pretty/refs/heads/main/zebar-config.yaml
mv zebar-config.yaml config.yaml
rm config.yaml
tmux ls
V .
cd /mnt/c/Users/Ilias/.config/wezterm
cd /mnt/c/Users/Ilias/.glzr/glazewm
cd ../tmux
cat
tput kend | \cat -v; echo
tput khome | \cat -v; echo
vim config.yaml
tmux source-file ~/.config/tmux/tmux.conf
v ../tmux/tmux.conf
v kanata.kbd
sudo apt install gtypist
gtypist
cd ~/.config/nvim
cd /mnt/c/Users/Ilias/.config/
cd -
cl]
sudo apt install bc jq
sudo apt install playerctl
sudo apt install fonts-noto-color-emoji
sudo apt install fonts-noto
cd /usr/share/fonts
[200~wget https://github.com/googlefonts/noto-fonts/blob/main/hinted/ttf/NotoSansSymbols2-Regular.ttf?raw=true -O NotoSansSymbols2-Regular.ttf
wget https://github.com/googlefonts/noto-fonts/blob/main/hinted/ttf/NotoSansSymbols2-Regular.ttf?raw=true -O NotoSansSymbols2-Regular.ttf
cd ~/.local/share
fc-list | grep Noto
sudo apt remove fonts-noto
sudo apt autoremove -y
sudo apt install fonts-noto-mono
cd ~/.local/share/fonts
rm -rf fonts
fc-cache -fv
fc-list | grep "Noto Sans Mono"
vc
nvim
bindkey -l
man bindkey
alias run-help
bindkey -h
bindkey --help
sed -n l
bindkey -v
sudo apt install wl-clipboard
v tmux.conf
bindkey -e
v
vim -h | grep startup
v --startuptime vim.log
cat vim.log
rm vim.log
tmux set @tokyo-night-tmux_window_id_style digital
tmux set @tokyo-night-tmux_pane_id_style hsquare
tmux set @tokyo-night-tmux_zoom_id_style dsquare
tmux set @tokyo-night-tmux_window_id_style hsquare
tmux set @tokyo-night-tmux_window_id_style dsquare
cd go-api
cd nextjs-test
gcc first-assignment.c
./a.out
cd element.al
bun add -D prettier prettier-plugin-astro
bun create next-app@latest
exit
tmux kill-session
tmux
cd easy-ctf
bunx shadcn-ui@latest init
bunx --bun shadcn-ui@latest init
cd /mnt/c/Users/Ilias/.config/wezterm/
echo $TERM
cd wezt
cd tmux
cd ~/personal/easy-ctf
c
v wezterm.lua
[200~bunx --bun shadcn@latest init -d
bunx --bun shadcn@latest init -d\

bun dev
bun add drizzle-orm @neondatabase/serverless dotenv\

bun add -D drizzle-kit tsx\

bun remove tsx
bun add better-auth
bunx @better-auth/cli generate
bunx drizzle-kit push
cd nvim
bunx --bun shadcn@latest add button
cd university
v .
g++ testing.cpp -o testing
./testing
g++ python-like-cpp.cpp -o python-like-cpp
nix-shell -p libgcc
nix-env -iA nixpjkgs.libgcc
nix-env -iA nixpkgs.libgcc
sudo apt update]
nix-env -iA libgcc
nix-env -e libgcc
nix-env -e nixpkgs.libgcc
sudo apt install gcc --upgrade -y
sudo apt install g++ --upgrade
sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
sudo apt upgrade
sudo apt install gcc-14
sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa -y\

sudo apt install gcc-14 g++-14
g++ --version
sudo apt install build-essential git --upgrade
gcc --version
htop
zsh --version
nvim --version
apt policy
apt policy | grep unstable
apt policy | grep neovim
zoxide --version
where zoxide
which tmux
tmux -v
tmux -V
tmux a
nvim /home/ilias/.zshrc
cd ~/.config/tmux
cp tmux.conf /mnt/c/Users/Ilias/Desktop
cp -R ../ohmyposh /mnt/c/Users/Ilias/Desktop
cp -R ../nvim /mnt/c/Users/Ilias/Desktop
sudo apt update\

npx npkill
sudo du -shc ~/personal
cd codecrafters-kafka-rust
rm -rf target
rm -rf conaticus-file-explorer
cd file-manager
rm -rf src-tauri/target
cd ..
cd wordpress-docker.test
v .gitignore
rm -rf mysql wordpress wordpress.zip
rm -rf mysql
cd
mv personal /mnt/c/Users/Ilias/Desktop
v /etc/wsl.conf
echo $WAYLAND_DISPLAY
fnvim .
cnvim .
sudo apt install xsel x11-apps
la ~/.config
cd personal
la
nix-env -q | grep fastfetch
nix-env -e nixpkgs.fastfetch
nix-env -q
nix-env -u --always\

nix-env -e fastfetch
sudo add-apt-repository ppa:zhangsongcui3371/fastfetch
sudo apt update
sudo apt install fastfetch
fetch
nvim .
/bin/bash -c "$(curl -fsSL https://php.new/install/linux)"
source ~/.zshrc
clear
cd pe
cl
laravel new laravel-test
v ~/.zshrc
: 1729853034:0;nvim /home/ilias/.zshrc
: 1729853064:0;sudo apt install genisoimage
: 1729870348:0;nvim /home/ilias/.zshrc
: 1729894528:0;cd pe
: 1729894537:0;md go-game
: 1729894541:0;cd go-game
: 1729894552:0;go init game
: 1729894555:0;cl
: 1729894561:0;go mod init game
: 1729894590:0;go get github.com/hajimehoshi/ebiten/v2
: 1729894612:0;go mod tidy
: 1729894648:0;[200~sudo apt install libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev pkg-config
: 1729894651:0;sudo apt install libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev pkg-config\

: 1729894662:0;clear
: 1729894672:0;v .
: 1729895197:0;go run ./main.go
: 1729895713:0;sudo apt install xsel x11-apps
: 1729895757:0;sudo apt install libx11-dev
: 1729897587:0;gcl https://github.com/Souvlaki42/dotfiles.git
: 1729897730:0;cd dotfiles
: 1729897750:0;alias gcb
: 1729897774:0;gcb wsl2-wezterm-nvim
: 1729897798:0;la .config
: 1729897832:0;rm -rf .config/ohmyposh
: 1729897846:0;cp -R ~/.config/ohmyposh .config
: 1729897867:0;cp -R /mnt/c/Users/Ilias/.config/wezterm .config
: 1729897885:0;cp -R ~/.config/nvim .config
: 1729897911:0;cp -R ~/.config/tmux .config
: 1729897914:0;rm .zshrc
: 1729897932:0;cp ~/.zshrc .
: 1729897933:0;la
: 1729897947:0;cp ~/.zsh_history .
